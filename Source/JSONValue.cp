#include "JSONValue.h"#include <string>#include <map>#include <vector>// ---------------------------------------------------------------------------//		¥ JSONValue// ---------------------------------------------------------------------------//	Default constructorJSONValue::JSONValue(){			}// ---------------------------------------------------------------------------//		¥ ~JSONElem// ---------------------------------------------------------------------------//	DestructorJSONValue::~JSONValue(){	}// ---------------------------------------------------------------------------//		¥ getType// ---------------------------------------------------------------------------// JSONValue::TypeJSONValue::getType(){	return type;}// ---------------------------------------------------------------------------//		¥ toString// ---------------------------------------------------------------------------// stringJSONValue::toString(){	if (type == DATA_TYPE_OBJECT) {		//string objectString = objectValue->toString();		return "OBJECT_VALUE";	}	else if (type == DATA_TYPE_STRING) {		return "\"" + stringValue + "\"";	}	else {		return stringValue;	}	}// ---------------------------------------------------------------------------//		¥ toObject// ---------------------------------------------------------------------------// JSONObject*	JSONValue::toObject() {	return objectValue;}			// ---------------------------------------------------------------------------//		¥ setValue(string)// ---------------------------------------------------------------------------// void 		JSONValue::setValue(string stringVal, Type typeVal){	type = typeVal;	stringValue = stringVal;}// ---------------------------------------------------------------------------//		¥ setValue(JSONObject*)// ---------------------------------------------------------------------------// void 		JSONValue::setValue(JSONObject* objectVal){	type = DATA_TYPE_OBJECT;	objectValue = objectVal;}