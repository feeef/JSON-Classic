#ifndef _JSON_READER_H_#define _JSON_READER_H_#include "JSONObject.h"class JSONReader {public:						JSONReader();	virtual				~JSONReader();		virtual	string		readStream(stringstream& strm);		class ReadError   	{   		public:      		bool foundError;      		string message;   	};   	   	ReadError* readError;   	   	JSONObject* getRootObject();private:	struct Token   	{    	enum Type      	{			TOKEN_OBJECT_BEGIN,  //    {			TOKEN_OBJECT_END,    //    }			TOKEN_ARRAY_BEGIN,   //    [			TOKEN_ARRAY_END,     //    ]			TOKEN_NEXT_ELEMENT,  //    ,			TOKEN_MEMBER_ASSIGN, //    :			TOKEN_STRING,        //    "xxx"			TOKEN_NUMBER,        //    [+/-]000.000[e[+/-]000]			TOKEN_BOOLEAN,       //    true -or- false			TOKEN_NULL,          //    null      	};		Type nType;		string sValue;	};			////////////////////////////////////////////////////////////////	// Instance Members	//	//virtual void		insertObject();		JSONObject* rootObject;				////////////////////////////////////////////////////////////////	// Class Members	//	static string 		matchNumber(							stringstream& inputStream,							ReadError& error						);								static string 		matchExpectedString(							stringstream& inputStream, 							const string& expected,							ReadError& error						);							static string 		matchString(							stringstream& inputStream, 							ReadError& error						);							static bool 		isValidNumberChar(char c);		};#endif